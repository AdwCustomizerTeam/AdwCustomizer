from pathlib import Path
import os
import shutil


class Theme:
    def __init__(
        self,
        name,
        icon_theme="Adwaita",
        comment="A theme generated by Gradience",
        cursor_theme="Adwaita",
        button_layout="close,minimize,maximize:menu",
    ) -> None:
        self.name = name
        self.path = Path("~/.themes").expanduser() / name
        if not self.path.exists():
            self.path.mkdir(parents=True)
        self.icon_theme = icon_theme
        self.cursor_theme = cursor_theme
        self.button_layout = button_layout
        self.comment = comment

    def __str__(self) -> str:
        return self.name

    def __repr__(self) -> str:
        return f"Theme({self.name})"

    def install(self, gtk_4_dark=None, gtk_4_light=None, gtk_3_dark=None, gnome_shell=None, gtk_3_light=None, assets_path=None):
        if assets_path:
            shutil.copytree(assets_path, self.path / "assets")

        if gtk_4_dark or gtk_4_light:
            self._install_gtk_4(gtk_4_dark, gtk_4_light, assets_path)
        if gtk_3_dark or gtk_3_light:
            self._install_gtk_3(gtk_3_dark, gtk_3_light, assets_path)
        if gnome_shell:
            self._install_gnome_shell(gnome_shell, assets_path)

        self.make_index_theme()

    def _install_gtk_3(self, gtk_3_dark, gtk_3_light, assets_path):
        path = self.path / "gtk-3.0"
        if not path.exists():
            path.mkdir(parents=True)
        if gtk_3_dark:
            shutil.copy(gtk_3_dark, path / "gtk-dark.css")
        if gtk_3_light:
            shutil.copy(gtk_3_light, path / "gtk.css")
        if assets_path:
            os.symlink(self.path / "assets", path / "assets")

    def _install_gtk_4(self, gtk_4_dark, gtk_4_light, assets_path):
        path = self.path / "gtk-4.0"
        if not path.exists():
            path.mkdir(parents=True)
        if gtk_4_dark:
            shutil.copy(gtk_4_dark, path / "gtk-dark.css")
        if gtk_4_light:
            shutil.copy(gtk_4_light, path / "gtk.css")
        if assets_path:
            os.symlink(self.path / "assets", path / "assets")

    def _install_gnome_shell(self, stylesheet, assets_path):
        path = self.path / "gnome-shell"
        if not path.exists():
            path.mkdir(parents=True)
        if stylesheet:
            shutil.copy(stylesheet, path / "gnome-shell.css")
        if assets_path:
            os.symlink(self.path / "assets", path / "assets")

    def make_index_theme(self, *args, **kwargs):
        index_theme = self.path / "index.theme"
        name = kwargs.get("name", self.name)
        comment = kwargs.get("comment", self.comment)
        icon_theme = kwargs.get("icon-theme", self.icon_theme)
        cursor_theme = kwargs.get("cursor-theme", self.cursor_theme)
        button_layout = kwargs.get("button-layout", self.button_layout)

        with index_theme.open("w") as f:
            f.write(
                """
[Desktop Entry]
Type=X-GNOME-Metatheme
Name={name}
Comment={comment}
Encoding=UTF-8

[X-GNOME-Metatheme]
GtkTheme={name}
MetacityTheme={name}
IconTheme={icon_theme}
CursorTheme={cursor_theme}
ButtonLayout={button_layout}

""".format(
                    name=name,
                    comment=comment,
                    icon_theme=icon_theme,
                    cursor_theme=cursor_theme,
                    button_layout=button_layout,
                )
            )
